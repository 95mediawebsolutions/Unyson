/**
 * FW_Form helpers
 * Dependencies: jQuery
 * Note: You can include this script in frontend (for e.g. to make you contact forms ajax submittable)
 */

var fwForm = {
	/**
	 * Make forms ajax submittable
	 * @param {Object} [opts] You can overwrite any
	 */
	initAjaxSubmit: function(opts) {
		var opts = jQuery.extend({
			selector: 'form[data-fw-form-id]',
			ajaxUrl: (typeof ajaxurl == 'undefined') ? '/wp-admin/admin-ajax.php' : ajaxurl,
			loading: function (show, $form) {
				$form.css('position', 'relative');
				$form.find('> .fw-form-loading').remove();

				if (show) {
					$form.append(
						'<div'+
						' class="fw-form-loading"'+
						' style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; background: rgba(255,255,255,0.1);"'+
						'></div>'
					);
				}
			},
			showErrors: function ($form, errors) {
				if (isAdmin) {
					fwForm.backend.showFlashMessages(
						fwForm.backend.generateFlashMessagesHtml({error: errors})
					);
				} else {
					// Frontend
					jQuery.each(errors, function (inputName, message) {
						var $input = $form.find('[name="' + inputName + '"]').last();
						message = '<p class="form-error" style="color: #9b2922;">{message}</p>'.replace('{message}', message);

						if ($input.length) {
							// error message under input
							$input.parent().after(message);
						} else {
							// if input not found, show message in form
							$form.prepend(message);
						}
					});
				}
			},
			hideErrors: function ($form) {
				$form.find('.form-error').remove();
			},
			onAjaxError: function(jqXHR, textStatus, errorThrown) {
				console.error(jqXHR, textStatus, errorThrown);
				alert('Ajax error (details are in console)');
			},
			onSuccess: function ($form, ajaxData) {
				if (isAdmin) {
					fwForm.backend.showFlashMessages(
						fwForm.backend.generateFlashMessagesHtml(ajaxData.flash_messages)
					);
				} else {
					var html = fwForm.frontend.generateFlashMessagesHtml(ajaxData.flash_messages);

					if (!html.length) {
						html = '<p>Success</p>';
					}

					$form.fadeOut(function(){
						$form.html(html).fadeIn();
					});

					// prevent multiple submit
					$form.on('submit', function(e){ e.preventDefault(); e.stopPropagation(); });
				}
			}
		}, opts || {}),
		isAdmin = (typeof adminpage != 'undefined' && jQuery(document.body).hasClass('wp-admin')),
		isBusy = false;

		jQuery(document.body).on('submit', opts.selector, function(e){
			e.preventDefault();

			if (isBusy) {
				console.warn('Working... Try again later.')
				return;
			}

			var $form = jQuery(this),
				$submitButton = $form.find('input[type="submit"][name]:focus');

			if (!$submitButton.length) {
				// in case you use this solution http://stackoverflow.com/a/5721762
				$submitButton = $form.find('input[type="submit"][name][clicked]');
			}

			if (!$form.is('form[data-fw-form-id]')) {
				console.error('This is not a FW_Form');
				return;
			}

			opts.hideErrors($form);
			opts.loading(true, $form);
			isBusy = true;

			jQuery.ajax({
				type: "POST",
				url: opts.ajaxUrl,
				data: $form.serialize() + ($submitButton.length ? '&'+ $submitButton.attr('name') +'='+ $submitButton.attr('value') : ''),
				dataType: 'json'
			}).done(function(r){
				isBusy = false;
				opts.loading(false, $form);

				if (r.success) {
					opts.onSuccess($form, r.data);
				} else {
					opts.showErrors($form, r.data.errors);
				}
			}).fail(function(jqXHR, textStatus, errorThrown){
				isBusy = false;
				opts.loading(false, $form);
				opts.onAjaxError(jqXHR, textStatus, errorThrown);
			});
		});
	},
	backend: {
		showFlashMessages: function(messagesHtml) {
			var $pageTitle = jQuery('.wrap h2:first');

			while ($pageTitle.next().is('.fw-flash-messages, .fw-flash-message, .updated, .update-nag, .error')) {
				$pageTitle.next().remove();
			}

			$pageTitle.after('<div class="fw-flash-messages">'+ messagesHtml +'</div>');

			jQuery(document.body).animate({scrollTop: 0}, 300);
		},
		/**
		 * Html structure should be the same as generated by FW_Flash_Messages::_print_backend()
		 * @param {Object} flashMessages
		 * @returns {string}
		 */
		generateFlashMessagesHtml: function(flashMessages) {
			var html = [],
				typeHtml = [],
				messageClass = '';

			jQuery.each(flashMessages, function(type, messages){
				typeHtml = [];

				switch (type) {
					case 'error':
						messageClass = 'error';
						break;
					case 'warning':
						messageClass = 'update-nag';
						break;
					default:
						messageClass = 'updated';
				}

				jQuery.each(messages, function(messageId, message){
					typeHtml.push('<div class="'+ messageClass +' fw-flash-message"><p>'+ message +'</p></div>');
				});

				if (typeHtml.length) {
					html.push(
						'<div class="fw-flash-type-'+ type +'">'+ typeHtml.join('</div><div class="fw-flash-type-'+ type +'">') +'</div>'
					);
				}
			});

			return html.join('');
		}
	},
	frontend: {
		/**
		 * Html structure is the same as generated by FW_Flash_Messages::_print_frontend()
		 * @param {Object} flashMessages
		 * @returns {string}
		 */
		generateFlashMessagesHtml: function(flashMessages) {
			var html = [],
				typeHtml = [],
				messageClass = '';

			jQuery.each(flashMessages, function(type, messages){
				typeHtml = [];

				jQuery.each(messages, function(messageId, message){
					typeHtml.push('<li class="fw-flash-message">'+ message +'</li>');
				});

				if (typeHtml.length) {
					html.push(
						'<ul class="fw-flash-type-'+ type +'">'+ typeHtml.join('</ul><ul class="fw-flash-type-'+ type +'">') +'</ul>'
					);
				}
			});

			return html.join('');
		}
	}
};

// Usage example
if (false) {
	jQuery(function ($) {
		fwForm.initAjaxSubmit({
			selector: 'form[data-fw-form-id][data-fw-ext-forms-type="contact-forms"]',
			ajaxUrl: ajaxurl
		});
	});
}